(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2221c6"],{cce5:function(e,n,s){"use strict";s.r(n),n["default"]="# Installing with Docker\n\nDirectus is published to both [DockerHub](https://hub.docker.com/r/directus/directus) and\n[GitHub Packages](https://github.com/orgs/directus/packages/container/package/directus) under `directus/directus`. To\nrun Directus straight from DockerHub, run:\n\n```bash\ndocker run -p 8055:8055 directus/directus\n```\n\n### Installing Specific Versions\n\nFor every version we release, we update/publish three tags. This allows you to use the latest released version, the\nlatest minor (eg v9.1) or a specific version (eg v9.1.2). To run Directus on a specific version, run:\n\n```bash\ndocker run -p 8055:8055 directus/directus:v9\n# OR\ndocker run -p 8055:8055 directus/directus:v9.1\n# OR\ndocker run -p 8055:8055 directus/directus:v9.1.2\n```\n\n### Create admin user using docker\n\nThe published Docker image will automatically populate the database, and create a user. To configure the email/password\nfor this first user, pass the following env vars:\n\n```bash\nADMIN_EMAIL=\"admin@example.com\"\nADMIN_PASSWORD=\"d1r3ctu5\"\n```\n\n## Persistence\n\nContainers are ephemeral, and this means that whenever you stop a container, all the data associated with it is going to\nbe removed [unless you persist them](https://docs.docker.com/storage/) when creating your container.\n\nDirectus image by default\n[will use the following locations](https://github.com/directus/directus/blob/main/.github/actions/build-images/rootfs/directus/images/main/Dockerfile#L93-L96)\nfor data persistence (note that these can be changed through environment variables)\n\n- `/directus/uploads` for uploads\n- `/directus/database` (only when using SQLite and not configured to a different folder)\n- `/directus/extensions` for extension loadings\n\n## Docker Compose\n\nWhen using Docker compose, you can use the following setup to get you started:\n\n```yaml\nversion: '3.2'\nservices:\n  database:\n    container_name: database\n    image: postgres:12\n    volumes:\n      - ./data/database:/var/lib/postgresql/data\n    networks:\n      - directus\n    environment:\n      POSTGRES_USER: 'directus'\n      POSTGRES_PASSWORD: 'directus'\n      POSTGRES_DB: 'directus'\n\n  cache:\n    container_name: cache\n    image: redis:6\n    networks:\n      - directus\n\n  directus:\n    container_name: directus\n    image: directus/directus:v9.0.0-rc.24\n    ports:\n      - 8055:8055\n    volumes:\n      # By default, Directus images writes uploads to /directus/uploads\n      # Always make sure your volumes matches the storage root when using\n      # local driver\n      - ./uploads:/directus/uploads\n      # Make sure to also mount the volume When using SQLite\n      # - ./database:/directus/database\n      # If you want to load extensions from the host\n      # - ./extensions:/directus/extensions\n    networks:\n      - directus\n    depends_on:\n      - cache\n      - database\n    environment:\n      KEY: '255d861b-5ea1-5996-9aa3-922530ec40b1'\n      SECRET: '6116487b-cda1-52c2-b5b5-c8022c45e263'\n\n      DB_CLIENT: 'pg'\n      DB_HOST: 'database'\n      DB_PORT: '5432'\n      DB_DATABASE: 'directus'\n      DB_USER: 'directus'\n      DB_PASSWORD: 'directus'\n\n      CACHE_ENABLED: 'true'\n      CACHE_STORE: 'redis'\n      CACHE_REDIS: 'redis://cache:6379'\n\n      ADMIN_EMAIL: 'admin@example.com'\n      ADMIN_PASSWORD: 'd1r3ctu5'\n\nnetworks:\n  directus:\n```\n"}}]);